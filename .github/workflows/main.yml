# File: .github/workflows/main.yml
name: CI and Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Updated Python versions: min supported, intermediate, latest stable
        python-version: ["3.9", "3.11", "3.12"]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies (including test extras)
      run: |
        python -m pip install --upgrade pip
        pip install .[test]

    - name: Lint and Format Check with Ruff
      run: |
        ruff format --check .
        ruff check .

    - name: Analyse code with Mypy
      run: |
        # Scan only the main package; mypy will find tests inside
        mypy commitai

    - name: Run tests with Pytest and Coverage
      run: |
        pytest # Pytest options are configured in pyproject.toml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Optional: if repo is private
        slug: lguibr/commitai
        fail_ci_if_error: true

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test_and_lint
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python for publishing
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      run: twine upload dist/*
