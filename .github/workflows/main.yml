# File: .github/workflows/main.yml
name: CI and Publish

# Trigger on pushes/PRs to main AND pushes of tags starting with 'v'
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*' # Trigger on tags like v0.1.0, v1.2.3, etc.
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Run linters, type checks, and tests
  test_and_lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Test on min, max, and one intermediate Python version
        python-version: ["3.8", "3.10", "3.12"]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Cache pip dependencies

    - name: Install dependencies (including test extras)
      run: |
        python -m pip install --upgrade pip
        # Install the package with the 'test' extras defined in pyproject.toml
        pip install .[test]

    - name: Lint and Format Check with Ruff
      run: |
        ruff format --check .
        ruff check .

    - name: Analyse code with Mypy
      run: |
        # Run mypy on the source and tests directories
        mypy commitai commitai/tests

    - name: Run tests with Pytest and Coverage
      run: |
        pytest # Pytest options are configured in pyproject.toml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Optional: if repo is private
        slug: lguibr/commitai
        fail_ci_if_error: true

  # Job 2: Publish package to PyPI on tagged commits
  publish:
    # Only run this job if the trigger was a tag push starting with 'v'
    if: startsWith(github.ref, 'refs/tags/v')
    # Only run this job if the 'test_and_lint' job succeeded (on all Python versions)
    needs: test_and_lint
    runs-on: ubuntu-latest

    # Grant permissions for GitHub's OIDC token to be used for PyPI Trusted Publishing
    permissions:
      id-token: write # Essential for Trusted Publishing

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python for publishing
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Use a consistent Python version for building

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine # Tools needed to build and upload the package

    - name: Build package
      run: python -m build # Creates wheel and sdist in dist/ directory

    - name: Publish package to PyPI
      # Twine will automatically use the OIDC token provided by the runner environment
      # when run in a job with 'id-token: write' permissions.
      # Ensure you have configured Trusted Publishing on PyPI for this repo/workflow.
      run: twine upload dist/*
